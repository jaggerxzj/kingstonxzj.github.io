<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>七皇</title>
  <icon>https://www.gravatar.com/avatar/f1ffc9e0a95c344bc9636e7512958903</icon>
  <subtitle>KingstonXZJ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://kingstonxzj.github.io/"/>
  <updated>2020-04-01T13:05:35.548Z</updated>
  <id>https://kingstonxzj.github.io/</id>
  
  <author>
    <name>七皇</name>
    <email>kingstonxzj@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>每日一题：用两个栈实现队列</title>
    <link href="https://kingstonxzj.github.io/2020/04/01/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%EF%BC%9A%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/"/>
    <id>https://kingstonxzj.github.io/2020/04/01/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%EF%BC%9A%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/</id>
    <published>2020-04-01T11:34:52.000Z</published>
    <updated>2020-04-01T13:05:35.548Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="面试题09-用两个栈实现队列"><a href="#面试题09-用两个栈实现队列" class="headerlink" title="面试题09.用两个栈实现队列"></a>面试题09.用两个栈实现队列</h2><p>用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 <strong><em>appendTail</em></strong> 和 <strong><em>deleteHead</em></strong> ，分别完成在<strong>队列尾部插入整数</strong>和在<strong>队列头部删除整数</strong>的功能。(若队列中没有元素，deleteHead 操作返回 -1 )</p><p><strong>示例1：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">["CQueue","appendTail","deleteHead","deleteHead"]</span><br><span class="line">[[],[3],[],[]]</span><br><span class="line">输出：[null,null,3,-1]</span><br></pre></td></tr></tbody></table></figure></div><p><strong>示例1：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">["CQueue","deleteHead","appendTail","appendTail","deleteHead","deleteHead"]</span><br><span class="line">[[],[],[5],[2],[],[]]</span><br><span class="line">输出：[null,-1,null,null,5,2]</span><br></pre></td></tr></tbody></table></figure></div><p><strong>提示：</strong></p><ul><li>1 <= values <= 10000</li><li>最多会对 appendTail、deleteHead 进行 10000 次调用</li></ul><p><strong>官方题解</strong></p><p><strong>方法：一个栈存储元素，一个栈辅助</strong></p><p>维护两个栈，第一个栈存储元素，第二个栈用于辅助操作。</p><p>根据栈的特性，<strong>第一个栈的底部元素是最后插入的元素，第一个栈的顶部元素是下一个被删除的元素。</strong> 为了维护队列的特性，每次插入的元素应该在第一个栈的底部。因此<strong>每次插入元素时，若第一个栈内已经有元素，应将已有的全部元素依次弹出并压入第二个栈，然后将新元素压入第一个栈，最后将第二个栈内的全部元素依次弹出并压入第一个栈。</strong> 经过上述操作，新插入的元素在第一个栈的底部，第一个栈内的其余元素的顺序和插入元素之前保持一致。</p><p><strong>删除元素时，若第一个栈非空，则直接从第一个栈内弹出一个元素并返回，若第一个栈为空，则返回 -1。</strong></p><p><strong>另外维护队列的元素个数，用于判断队列是否为空。初始元素个数为 0。每次插入元素，元素个数加 1。每次删除元素，元素个数减 1。</strong></p><p><strong>插入元素</strong></p><p>插入元素对应方法 appendTail</p><ul><li>如果 stack1 非空，则将 stack1 内的元素依次弹出并依次压入 stack2，直至 stack1 内的全部元素都被弹出</li><li>将新元素 value 压入 stack1 内</li><li>如果 stack2 非空，则将 stack2 内的元素依次弹出并依次压入 stack1，直至 stack2 内的全部元素都被弹出</li><li>将 size 的值加 1</li></ul><p><strong>删除元素</strong></p><p>删除元素对应方法 deleteHead</p><ul><li>如果 size 为 0，则队列为空，返回 -1</li><li>如果 size 大于 0，则队列非空，将 size 的值减 1，从 stack1 弹出一个元素并返回</li></ul><p><strong>复杂度分析</strong></p><p>插入元素</p><ul><li>时间复杂度：<strong>O(n)O(n)O(n)。</strong>插入元素时，对于已有元素，每个元素都要弹出栈两次，压入栈两次，因此是线性时间复杂度。</li><li>空间复杂度：<strong>O(n)O(n)O(n)。</strong>需要使用额外的空间存储已有元素。</li></ul><p>删除元素</p><ul><li>时间复杂度：<strong>O(1)O(1)O(1)</strong>。判断元素个数和删除队列头部元素都使用常数时间。</li><li>空间复杂度：<strong>O(1)O(1)O(1)</strong>。从第一个栈弹出一个元素，使用常数空间。<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CQueue</span> </span>{</span><br><span class="line">    Stack<integer> stack1;</integer></span><br><span class="line">    Stack<integer> stack2;</integer></span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CQueue</span><span class="params">()</span> </span>{</span><br><span class="line">        stack1 = <span class="keyword">new</span> Stack<integer>();</integer></span><br><span class="line">        stack2 = <span class="keyword">new</span> Stack<integer>();</integer></span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">appendTail</span><span class="params">(<span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">        <span class="keyword">while</span> (!stack1.isEmpty()) {</span><br><span class="line">            stack2.push(stack1.pop());</span><br><span class="line">        }</span><br><span class="line">        stack1.push(value);</span><br><span class="line">        <span class="keyword">while</span> (!stack2.isEmpty()) {</span><br><span class="line">            stack1.push(stack2.pop());</span><br><span class="line">        }</span><br><span class="line">        size++;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteHead</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        size--;</span><br><span class="line">        <span class="keyword">return</span> stack1.pop();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">执行结果：通过</span><br><span class="line">显示详情执行用时: 337 ms</span><br><span class="line">内存消耗: 48.3 MB</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;面试题09-用两个栈实现队列&quot;&gt;&lt;a href=&quot;#面试题09-用两个栈实现队列&quot; class=&quot;headerlink&quot; title=&quot;面试题09.用两个栈实现队列&quot;&gt;&lt;/a&gt;面试题09.用两个栈实现队列&lt;/h2&gt;
      
    
    </summary>
    
    
      <category term="leetcode" scheme="https://kingstonxzj.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://kingstonxzj.github.io/tags/leetcode/"/>
    
      <category term="栈" scheme="https://kingstonxzj.github.io/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://kingstonxzj.github.io/2020/04/01/hello-world/"/>
    <id>https://kingstonxzj.github.io/2020/04/01/hello-world/</id>
    <published>2020-03-31T16:43:35.596Z</published>
    <updated>2020-03-31T16:43:35.602Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Che
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
